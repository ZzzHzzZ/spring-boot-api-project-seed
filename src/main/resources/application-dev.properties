# 开发环境配置
server.port=80
server.session.timeout=1800
# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
# 数据源配置，请修改为你项目的实际配置
spring.datasource.url=jdbc:mysql://rm-uf6kna45bo5x79467o.mysql.rds.aliyuncs.com/demo?characterEncoding=utf-8&allowMultiQueries=true&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=zHz19950316
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.druid.initial-size=5
# 最小连接池数量
spring.datasource.druid.min-idle=0
# 最大连接池数量
spring.datasource.druid.max-active=10
# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
#如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait=60000
# 有两个含义：
# 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
# 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明  单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间  单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=100000
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validation-query=SELECT 'x'
# 检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法 单位：秒
spring.datasource.druid.validation-query-timeout=30
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
# 如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=true
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wallFilter,log4j
spring.datasource.druid.filter.stat.merge-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=3000
spring.datasource.druid.filter.stat.log-slow-sql=true
# 通过connectProperties属性来打开mergeSql功能
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true
spring.datasource.druid.remove-abandoned=false
# 对于建立时间超过removeAbandonedTimeout的连接强制关闭 单位秒 (removeAbandoned = true的时候)
spring.datasource.druid.remove-abandoned-timeout=180
spring.datasource.druid.log-abandoned=true